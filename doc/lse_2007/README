-------------
first message
-------------
Hi Klaas,

I've used the Tabbie to run 2 tournaments at LSE. It ran with great success
and speed the first time, but crashed the second time due to an obscure loop
hole I created while messing around with the code. Installing it was
exceptionally difficult, esp since it needed to be placed on a webpage, but
was well worth the trouble in my opinion. The speed the programme gives you
in entering teams and calculating distributions is amazing.

When I looked at the original tabbie code, I disliked the worlds power
pairing system and converted it into a 'tough break'. This means that teams
are arranged by team points and then by total speaker points and the tab
takes the top four as the 1st room, and so on. While this may not appeal to
many, it's the sort of thing we like to do for the LSE Open, which always
sees a high level of debaters. It also only has 5 rounds, maybe 6, so we
won't see a situation of that many repeats arising, unlike worlds which has
9 rounds.

As a result of this, I adapted the programme to use the logic of the cragie
tab instead, which (in my opinion) is simple and elegent whilst very
effective in ensuring all combinations have been tried out before any of the
4 teams repeat positions (but I guess only really works if you power pair
your teams in the manner above).

The only real problem with the tabbie programme is that it does not have a
good way to present the rooms to debaters. I got around this by using a
programme which is designed to extract information from MySQL and input it
into Powerpoint slides. With this programme, time elapsed between entering
the final ballot and having a great powerpoint ready is less than 1 minute.
This also allows for quick printing of ballots (from powerpoint). Production
of a good excel tab can be done easily with another similar programme that
works with excel.

Anyway, don't know if this helps in any way. I know you're really looking
for someone who can help improve the code of tabbie rather than someone who
has changed it drastically. But do let me know if I can help in any way.

Joshua Lo

--------------
second message
--------------
Hi Klaas,

Here's my draw.php files to give you a good idea of my version of tabbie. I
chucked all codes relating to adj sorting and sorting by universities, since
the tab was intended to run an open and our internal tournaments. I also
changed the way teams were sorted, power pairing everyone from round 2
according to speaker points and team points. There is no folding till the
break (which I did manually) so there's no code for that either.

The main file is draw3.php, which may be confusing and may not be entirely
code efficient due to my limited knowledge of MySQL and Php. If you know any
way to make the code much shorter I would be much obliged.

The 24 position combination test (built upon Craggie) is basically one
extended switch statement which tests for the minimum number of times table
positions are allocated. Since LSE doesn't run any tournaments bigger than 5
or 6 rounds, I felt stopping at 9 repeats was sufficient (you'll probably
understand this when you take a look at the code).

The shortcoming of the code as written (and with Craggie) is that since it
follows the way the 24 combinations are written, cycling through them from
1-24 when it checks the number of repeats, the code has an inherent bias to
combinations which are listed first. This bias is what allows it to always
reproduce the same result, but sometimes I question the need for such a
requirement (though your manual is clear on the advantages of eliminating
cheating this way).

I'm not sure how much I can help you on the tab project in the long term
since next year is my last year and I'm not tab master for the next LSE
Open, (which you should come down for!). My coding skills are also very
basic. However, I would not mind being involved and giving useful
comments/ideas if I have any, since tabbie is well worth improving.

Joshua